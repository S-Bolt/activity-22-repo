* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
  
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  

}

/* 
What happens when we set the display property to flex? 
TODO: It allows the nav values to stack when re-sized. 
*/ 

nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
TODO: Write your answer here 
*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
TODO: Keeps the producs centered on the vertiacal axis. 
*/
.products {
  flex: 2;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
What is it doing here? 
TODO: The products maintain thier size and don't grow or shirnk
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
What is it doing here? 
TODO: making main/nav display as a column instead of rows for smaller screens
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
